name: Sync Repositories

on:
  schedule:
    - cron: "*/15 * * * *"  # Runs every 15 minutes
  push:
    branches:
      - main  # Runs on every push to main
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Repository (granwyntan/BytePenguin)
        uses: actions/checkout@v4
        with:
          repository: "granwyntan/BytePenguin"
          token: ${{ secrets.GH_PAT }}  # Ensure this secret is set
          path: temp  # Clone into "temp" folder

      - name: Verify Cloned Files
        run: |
          echo "[LOG] Listing cloned files from granwyntan/BytePenguin"
          ls -lah temp

      - name: Configure Git for Destination Repo (BytePenguinCode/BytePenguin)
        run: |
          echo "[LOG] Setting up Git"
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"

      - name: Add Destination Repository (BytePenguinCode/BytePenguin)
        run: |
          cd temp
          echo "[LOG] Adding destination remote repository"
          git remote add destination https://${{ secrets.GH_PAT }}@github.com/BytePenguinCode/BytePenguin.git
          git fetch destination main || echo "[LOG] No existing main branch"

      - name: Delete Old Files from Temp Directory
        run: |
          echo "[LOG] Deleting old files from temp"
          rm -rf ../temp/*  # Remove all files from temp directory before copying

      - name: Copy Files from Source Repo to Temp Directory
        run: |
          echo "[LOG] Copying files from granwyntan/BytePenguin"
          cp -r * ../temp  # Copy all files from source to temp

      - name: Debug Git Status
        run: |
          cd temp
          echo "[LOG] Checking Git Status"
          git status
          git diff --stat

      - name: Reset Remote Repository (Force Push)
        run: |
          cd temp
          echo "[LOG] Resetting destination repository"
          git fetch destination main
          git reset --hard destination/main  # Reset to the destination's main branch
          git clean -fd  # Clean untracked files

      - name: Sync and Push Changes to Destination Repo
        run: |
          cd temp
          echo "[LOG] Staging new files"
          git add .
          
          # Check if there are any changes before committing
          if git diff --staged --quiet; then
            echo "[LOG] No changes to commit."
          else
            echo "[LOG] Committing new files"
            git commit -m "Sync new files from granwyntan/BytePenguin"
            echo "[LOG] Pushing changes to BytePenguinCode/BytePenguin"
            git push --force destination main || { echo "[ERROR] Push failed!"; exit 1; }
          fi
