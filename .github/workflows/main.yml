name: Sync Repositories

on:
  schedule:
    - cron: "*/15 * * * *"  # Runs every 15 minutes
  push:
    branches:
      - main  # Runs on every push to main
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Repository (granwyntan/BytePenguin)
        uses: actions/checkout@v4
        with:
          repository: "granwyntan/BytePenguin"
          token: ${{ secrets.GH_PAT }}  # Ensure this secret is set
          path: temp  # Clone into "temp" folder

      - name: Verify Cloned Files
        run: |
          echo "[LOG] Listing cloned files from granwyntan/BytePenguin"
          ls -lah temp

      - name: Configure Git for Destination Repo (BytePenguinCode/BytePenguin)
        run: |
          echo "[LOG] Setting up Git"
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"

      - name: Add Destination Repository (BytePenguinCode/BytePenguin)
        run: |
          cd temp
          echo "[LOG] Adding destination remote repository"
          git remote add destination https://${{ secrets.GH_PAT }}@github.com/BytePenguinCode/BytePenguin.git
          git fetch --all  # Fetch all remote references

      - name: Check Default Branch of Destination Repository
        run: |
          cd temp
          echo "[LOG] Checking the default branch of the destination repository"
          # Get the default branch name from the destination repository
          DEFAULT_BRANCH=$(git remote show destination | grep 'HEAD branch' | awk '{print $NF}')
          echo "[LOG] Default branch of destination repository is $DEFAULT_BRANCH"
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Clean Destination Repository (BytePenguinCode/BytePenguin)
        run: |
          echo "[LOG] Cleaning BytePenguinCode/BytePenguin repository"
          cd temp
          git rm -r --cached .  # Removes all files in the repo (staged for removal)
          git commit -m "Clean the repository before syncing new files"

      - name: Delete Old Files from Temp Directory
        run: |
          echo "[LOG] Deleting old files from temp"
          rm -rf ../temp/*  # Remove all files from temp directory before copying

      - name: Copy Files from Source Repo to Temp Directory
        run: |
          echo "[LOG] Copying files from granwyntan/BytePenguin"
          cp -r * ../temp  # Copy all files from source to temp

      - name: Debug Git Status
        run: |
          cd temp
          echo "[LOG] Checking Git Status"
          git status
          git diff --stat

      - name: Reset Remote Repository (Force Push)
        run: |
          cd temp
          echo "[LOG] Resetting to destination repository's default branch"
          git fetch destination ${{ env.DEFAULT_BRANCH }} || echo "[LOG] Default branch not found"
          
          # If default branch exists, reset to the latest state of destination's branch
          if git show-ref --verify --quiet refs/remotes/destination/${{ env.DEFAULT_BRANCH }}; then
            echo "[LOG] Resetting to destination ${{ env.DEFAULT_BRANCH }} branch"
            git reset --hard destination/${{ env.DEFAULT_BRANCH }}
          else
            echo "[LOG] No default branch found on destination. Skipping reset."
          fi
          
          git clean -fd  # Clean untracked files

      - name: Sync and Push Changes to Destination Repo
        run: |
          cd temp
          echo "[LOG] Staging new files"
          git add .
          
          # Check if there are any changes before committing
          if git diff --staged --quiet; then
            echo "[LOG] No changes to commit."
          else
            echo "[LOG] Committing new files"
            git commit -m "Sync new files from granwyntan/BytePenguin"
            echo "[LOG] Pushing changes to BytePenguinCode/BytePenguin"
            git push --force destination ${{ env.DEFAULT_BRANCH }} || { echo "[ERROR] Push failed!"; exit 1; }
          fi
